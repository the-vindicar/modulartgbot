"""
This hack allows you to prefix all outgoing URLs generated by url_for() without changing incoming URLs used in routing.
Example usage:

```
quart.Quart.url_map_class = PrefixedQuartMap
app = quart.Quart(__name__)
app.url_map.url_prefix = '/myprefix'
```
"""
from quart.routing import QuartMap, MapAdapter


__all__ = ['PrefixedQuartMap']


class PrefixedQuartMap(QuartMap):
    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.url_prefix = ''

    def bind_to_request(self, request, subdomain, server_name) -> MapAdapter:
        """This method is defined in quart.QuartMap."""
        adapter = super().bind_to_request(request, subdomain, server_name)
        adapter.script_name = self.url_prefix + adapter.script_name
        return adapter

    def bind_to_environ(self, environ, server_name=None, subdomain=None) -> MapAdapter:
        adapter = super().bind_to_environ(environ, server_name, subdomain)
        adapter.script_name = self.url_prefix + adapter.script_name
        return adapter
